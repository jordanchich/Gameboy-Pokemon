{"ast":null,"code":"import { fetchPokemonSuccess, fetchPokemonPending } from './action';\nvar numberOfPokemon = 10;\nvar urls = [];\n\nfor (var i = 1; i < numberOfPokemon; i++) {\n  urls.push(\"https://pokeapi.co/api/v2/pokemon-species/\".concat(i));\n}\n\nvar requests = urls.map(function (url) {\n  return fetch(url);\n});\nexport default (function () {\n  return function (dispatch) {\n    dispatch(fetchPokemonPending());\n    Promise.all(requests).then(function (responses) {\n      return Promise.all(responses.map(function (res) {\n        return res.json();\n      }));\n    }).then(function (pokemons) {\n      return pokemons.map(function (pokemon) {\n        return {\n          id: pokemon.id,\n          name: pokemon.name,\n          captureRate: pokemon.capture_rate,\n          isCatch: false,\n          image: \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\".concat(pokemon.id, \".png\")\n        };\n      });\n    }).then(function (pokemons) {\n      return dispatch(fetchPokemonSuccess(pokemons));\n    });\n  };\n});","map":{"version":3,"sources":["/Users/jordanchich/Desktop/original/src/store/fetchPokemons.js"],"names":["fetchPokemonSuccess","fetchPokemonPending","numberOfPokemon","urls","i","push","requests","map","url","fetch","dispatch","Promise","all","then","responses","res","json","pokemons","pokemon","id","name","captureRate","capture_rate","isCatch","image"],"mappings":"AAAA,SAAQA,mBAAR,EAA6BC,mBAA7B,QAAuD,UAAvD;AAGA,IAAMC,eAAe,GAAG,EAAxB;AAEA,IAAMC,IAAI,GAAG,EAAb;;AAEA,KAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,eAAnB,EAAoCE,CAAC,EAArC,EAAwC;AACpCD,EAAAA,IAAI,CAACE,IAAL,qDAAuDD,CAAvD;AACH;;AAED,IAAME,QAAQ,GAAGH,IAAI,CAACI,GAAL,CAAS,UAAAC,GAAG;AAAA,SAAIC,KAAK,CAACD,GAAD,CAAT;AAAA,CAAZ,CAAjB;AAEA,gBAAe,YAAM;AACjB,SAAO,UAAAE,QAAQ,EAAI;AACfA,IAAAA,QAAQ,CAACT,mBAAmB,EAApB,CAAR;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ,EACCO,IADD,CACM,UAAAC,SAAS;AAAA,aAAIH,OAAO,CAACC,GAAR,CAAYE,SAAS,CAACP,GAAV,CAAc,UAAAQ,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OAAjB,CAAZ,CAAJ;AAAA,KADf,EAECH,IAFD,CAEM,UAAAI,QAAQ;AAAA,aAAIA,QAAQ,CAACV,GAAT,CAAa,UAAAW,OAAO;AAAA,eAAI;AACtCC,UAAAA,EAAE,EAAGD,OAAO,CAACC,EADyB;AAEtCC,UAAAA,IAAI,EAAEF,OAAO,CAACE,IAFwB;AAGtCC,UAAAA,WAAW,EAAEH,OAAO,CAACI,YAHiB;AAItCC,UAAAA,OAAO,EAAE,KAJ6B;AAKtCC,UAAAA,KAAK,qFAA8EN,OAAO,CAACC,EAAtF;AALiC,SAAJ;AAAA,OAApB,CAAJ;AAAA,KAFd,EASCN,IATD,CASM,UAAAI,QAAQ;AAAA,aAAIP,QAAQ,CAACV,mBAAmB,CAACiB,QAAD,CAApB,CAAZ;AAAA,KATd;AAUH,GAZD;AAaH,CAdD","sourcesContent":["import {fetchPokemonSuccess, fetchPokemonPending} from './action'\n\n\nconst numberOfPokemon = 10\n\nconst urls = []\n\nfor(let i = 1; i < numberOfPokemon; i++){\n    urls.push(`https://pokeapi.co/api/v2/pokemon-species/${i}`)\n}\n\nconst requests = urls.map(url => fetch(url))\n\nexport default () => {\n    return dispatch => {\n        dispatch(fetchPokemonPending())\n        Promise.all(requests)\n        .then(responses => Promise.all(responses.map(res => res.json())))\n        .then(pokemons => pokemons.map(pokemon =>({\n            id : pokemon.id,\n            name: pokemon.name,\n            captureRate: pokemon.capture_rate,\n            isCatch: false,\n            image: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemon.id}.png`\n        })))\n        .then(pokemons => dispatch(fetchPokemonSuccess(pokemons)))     \n    }\n}"]},"metadata":{},"sourceType":"module"}